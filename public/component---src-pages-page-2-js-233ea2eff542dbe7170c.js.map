{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SideDrawer/DrawerToggleButton.js","webpack:///./src/components/Toolbar/Toolbar.js","webpack:///./src/components/SideDrawer/SideDrawer.js","webpack:///./src/components/Backdrop/Backdrop.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["SecondPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","drawerToggleButton","core_browser_esm","className","onClick","click","toolbar","SideDrawer_DrawerToggleButton","drawerClickHandler","href","sideDrawer","drawerClasses","show","join","backdrop","Header","state","sideDrawerOpen","drawerToggleClickHandler","_this","setState","prevState","backdropClickHandler","this","Backdrop_Backdrop","style","height","Toolbar_Toolbar","SideDrawer_SideDrawer","Component","siteTitle","defaultProps","Layout","gatsby_browser_entry","header","Date","getFullYear","_755544856","node","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","array","arrayOf"],"mappings":"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","file":"component---src-pages-page-2-js-233ea2eff542dbe7170c.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\n\nimport './DrawerToggleButton.css';\n\nconst drawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\"></div>\n    <div className=\"toggle-button__line\"></div>\n    <div className=\"toggle-button__line\"></div>\n  </button>\n\n);\n\nexport default drawerToggleButton","import React from 'react';\n\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\";\nimport './Toolbar.css'\n\nconst toolbar = props => (\n  <header className= \"toolbar\">\n    <nav className= \"toolbar_navigation\">\n      <div className=\"toolbar__toggle-button\">\n        <DrawerToggleButton click={props.drawerClickHandler}/>\n      </div>\n      <div className=\"toolbar_logo\"><a href=\"/\">THE LOGO</a></div>\n      <div className= \"spacer\"></div>\n      <div className=\"toolbar_navigation-items\">\n        <ul>\n          <li><a href=\"/\">Products</a></li>\n          <li><a href=\"/\">Users</a></li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n)\n\nexport default toolbar;","import React from 'react';\n\nimport './SideDrawer.css';\n\nconst sideDrawer = props => {\n  let drawerClasses = ['side-drawer'];\n  if(props.show) {\n    drawerClasses = ['side-drawer', 'open']\n  }\n\n  return (\n  <nav className={drawerClasses.join(' ')}>\n    <ul>\n      <li><a href=\"/\">Products</a></li>\n      <li><a href=\"/\">Users</a></li>\n    </ul>\n  </nav>\n  );\n} \n\nexport default sideDrawer;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => (\n  <div className=\"backdrop\" onClick={props.click}></div>\n);\n\nexport default backdrop\n\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Toolbar from './Toolbar/Toolbar';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport Backdrop from './Backdrop/Backdrop';\n\nconst Headers = () => (\n  <header>\n    <div>\n      <h1>\n       \n      </h1>\n    </div>\n  </header>\n)\n\nclass Header extends React.Component {\n\n  state = {\n    sideDrawerOpen: false,\n  }\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen}\n    })\n  }\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen:false})\n  }\n\n  render() {\n    let backdrop;\n\n    if(this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>\n    }\n    return (\n      <header style={{height: '100%'}}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={this.state.sideDrawerOpen}/>\n        {backdrop}\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from './header'\n// import Toolbar from './Toolbar/Toolbar';\n// import SideDrawer from './SideDrawer/SideDrawer';\n// import Backdrop from './Backdrop/Backdrop';\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div style={{height: '100%'}}>\n          <Header />\n          {/* <Toolbar />\n          <SideDrawer />\n          <Backdrop /> */}\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n      </div>\n    )}\n  />\n)\n\n\n\n\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}